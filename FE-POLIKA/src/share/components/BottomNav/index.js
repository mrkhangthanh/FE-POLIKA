import React, { useState } from 'react';
import { Link, useNavigate } from 'react-router-dom';
import './BottomNav.css';

const BottomNav = () => {
  const navigate = useNavigate();
  const [isAccountMenuOpen, setIsAccountMenuOpen] = useState(false);

  // Danh s√°ch c√°c m·ª•c cho Bottom Navigation Bar
  const bottomNavItems = [
    { icon: 'fa-solid fa-home', label: 'Trang ch·ªß', path: '/' },
    { icon: 'fa-solid fa-file-invoice', label: 'ƒê∆°n h√†ng', path: '/orders' },
    { icon: 'fa-solid fa-plus', label: 'T·∫°o ƒê∆°n', path: '/create-order', isProminent: true }, // M·ª•c n·ªïi b·∫≠t
    { icon: 'fa-solid fa-headset', label: 'H·ªó tr·ª£', path: '/support' },
    { icon: 'fa-solid fa-circle-user', label: 'T√†i kho·∫£n', path: '/profile' }, // üî¥ C·∫≠p nh·∫≠t icon
  ];

  // Danh s√°ch c√°c m·ª•c trong menu "T√†i kho·∫£n"
  const accountMenuItems = [
    { icon: 'fa-solid fa-circle-user', label: 'Th√¥ng tin t√†i kho·∫£n', path: '/profile' },
    { icon: 'fa-solid fa-gear', label: 'C√†i ƒë·∫∑t', path: '/settings' },
    { icon: 'fa-solid fa-sign-out-alt', label: 'ƒêƒÉng xu·∫•t', action: 'logout' }, // M·ª•c ƒëƒÉng xu·∫•t
  ];

  // X·ª≠ l√Ω ƒëƒÉng xu·∫•t
  const handleLogout = () => {
    // X√≥a token v√† th√¥ng tin ng∆∞·ªùi d√πng t·ª´ localStorage
    localStorage.removeItem('token');
    localStorage.removeItem('user');
    // Chuy·ªÉn h∆∞·ªõng v·ªÅ trang ƒëƒÉng nh·∫≠p
    navigate('/login');
  };

  // X·ª≠ l√Ω khi nh·∫•n v√†o m·ª•c "T√†i kho·∫£n"
  const handleAccountClick = (e) => {
    e.preventDefault(); // NgƒÉn ƒëi·ªÅu h∆∞·ªõng m·∫∑c ƒë·ªãnh
    setIsAccountMenuOpen(!isAccountMenuOpen); // Toggle menu
  };

  // X·ª≠ l√Ω khi nh·∫•n v√†o m·ªôt m·ª•c trong menu
  const handleMenuItemClick = (item) => {
    if (item.action === 'logout') {
      handleLogout();
    } else {
      navigate(item.path);
    }
    setIsAccountMenuOpen(false); // ƒê√≥ng menu sau khi ch·ªçn
  };

  return (
    <div className="bottom-nav">
      {bottomNavItems.map((item, index) => (
        <div key={index} className="bottom-nav-item-wrapper">
          <Link
            to={item.path}
            className={`bottom-nav-item ${item.isProminent ? 'prominent' : ''}`}
            onClick={item.label === 'T√†i kho·∫£n' ? handleAccountClick : undefined}
          >
            <i className={item.icon} />
            <span>{item.label}</span>
          </Link>

          {/* Menu hi·ªÉn th·ªã khi nh·∫•n v√†o "T√†i kho·∫£n" */}
          {item.label === 'T√†i kho·∫£n' && isAccountMenuOpen && (
            <div className="account-menu">
              {accountMenuItems.map((menuItem, menuIndex) => (
                <div
                  key={menuIndex}
                  className="account-menu-item"
                  onClick={() => handleMenuItemClick(menuItem)}
                >
                  <i className={menuItem.icon} />
                  <span>{menuItem.label}</span>
                </div>
              ))}
            </div>
          )}
        </div>
      ))}
    </div>
  );
};

export default BottomNav;